create external table bs (uid int, feature1 int, feature2 int, slope int, h1 int,v1 int, h2 int, hill1 int, hill2 int, hill3 int, h3 int, wild int, a1 int,a2 int, a3 int, a4 int, a5 int, a6 int, a7 int, a8 int, a9 int, a10 int, a11 int, a12 int, a13 int, a14 int, a15 int, a16 int, a17 int, a18 int, a19 int, a20 int, a21 int, a22 int, a23 int, a24 int, a25 int, a26 int, a27 int, a28 int, a29 int, a30 int, a31 int, a32 int, a33 int, a34 int, a35 int, a36 int, a37 int, a38 int, a39 int, a40 int, a42 int, a43 int,a44 int, class int)
ROW FORMAT DELIMITED
FIELDS TERMINATED BY ","
LINES TERMINATED BY "\n"
location '/user/labuser/KoppelBachelor/backup/forest0/train';

create external table bstest (uid int, feature1 int, feature2 int, slope int, h1 int,v1 int, h2 int, hill1 int, hill2 int, hill3 int, h3 int, wild int, a1 int,a2 int, a3 int, a4 int, a5 int, a6 int, a7 int, a8 int, a9 int, a10 int, a11 int, a12 int, a13 int, a14 int, a15 int, a16 int, a17 int, a18 int, a19 int, a20 int, a21 int, a22 int, a23 int, a24 int, a25 int, a26 int, a27 int, a28 int, a29 int, a30 int, a31 int, a32 int, a33 int, a34 int, a35 int, a36 int, a37 int, a38 int, a39 int, a40 int, a42 int, a43 int,a44 int, class int)
ROW FORMAT DELIMITED
FIELDS TERMINATED BY ","
LINES TERMINATED BY "\n"
location '/user/labuser/KoppelBachelor/backup/forest0/test';




create table fcoefs stored as textfile as select feature1, class, log((featurecount+0.5)/classcount) as f1coef, log((classcount+0.5)/total) as ccoef from 
(select feature1, class, value as featurecount,sum(value) over (partition by class) classcount, sum(value) over () total from 
(select feature1, sum(1) value, class from bs group by feature1, class)a)b;

create table f2coefs stored as textfile as select feature2, class, log((featurecount+0.5)/classcount) as f2coef  from 
(select feature2, class, value as featurecount,sum(value) over (partition by class) classcount from 
 (select feature2, sum(1) value, class from bs group by feature2, class)a)b;


create table testscores stored as textfile as select uid, t.feature1, t.feature2, t.class as actual, a.class as prediction, f1coef+ccoef+f2coef score from bstest t 
inner join 
(select feature1, class, f1coef, ccoef from fcoefs)a on t.feature1 = a.feature1 
inner join 
(select feature2, class, f2coef from f2coefs)b on t.feature2 = b.feature2 and a.class = b.class;
                            

select correct/count(*) accuracy from bstest left join 
(select sum(if(actual = prediction, 1, 0)) correct from 
(select actual, prediction, score, max(score) over (partition by uid) as maxscore from testscores3)a  
where score = maxscore) b on 1=1 group by correct;                
